import string

import psycopg2

from PgSQL.connect import get_connection
import random


def generate_random_email():
    return ''.join(random.choice(string.ascii_lowercase) for _ in range(8)) + '@example.com'


def generate_random_name():
    first_names = ["李", "王", "张", "刘", "陈", "杨", "赵", "黄", "周", "吴", "徐", "孙", "胡", "朱", "高", "林", "何",
                   "郭", "马", "罗", "梁", "宋", "郑", "谢", "韩", "唐", "冯", "于", "董", "萧", "程", "曹", "袁", "邓",
                   "许", "傅", "沈", "曾", "彭", "吕", "苏", "卢", "蒋", "蔡", "贾", "丁", "魏", "薛", "叶", "阎", "余",
                   "潘", "杜", "戴", "夏", "钟", "汪", "田", "任", "姜", "范", "方", "石", "姚", "谭", "廖", "邹", "熊",
                   "金", "陆", "郝", "孔", "白", "崔", "康", "毛", "邱", "秦", "江", "史", "顾", "侯", "邵", "孟", "龙",
                   "万", "段", "雷", "钱", "汤", "尹", "黎", "易", "常", "武", "乔", "贺", "赖", "龚", "文"]
    last_names = ["伟", "芳", "娜", "勇", "敏", "静", "丽", "辉", "强", "俊", "磊", "洋", "婷", "宇", "鹏", "燕", "玲",
                  "颖", "超", "明", "杰", "琳", "丹", "华", "涛", "慧", "君", "琪", "峰", "兰", "萍", "翔", "东", "楠",
                  "良", "博", "浩", "海", "阳", "雪", "晨", "妍", "虹", "莎", "悦", "瑶", "欣", "晶", "梅", "竹", "柏",
                  "思", "萱", "梦", "诗", "嘉", "逸", "韵", "翰", "鸿", "泽", "舒", "荣", "启", "桂", "灿", "锦", "威",
                  "奇", "哲", "志", "达", "育", "瑞", "祥", "凯", "乐", "豪", "彬", "礼", "毅", "谦", "振", "宗", "维",
                  "安", "佑", "梓", "宣", "翰", "艺", "沐", "逸", "禹", "秉", "卓", "颂", "佑", "致", "耀", "黎", "慕",
                  "启", "展", "言", "誉", "贤", "虞", "裕", "际", "熙", "韵", "咏", "晖", "韬", "瞻", "遥", "悠", "巍",
                  "谌", "敦", "濮", "雍", "瞿", "麋", "隗", "山", "谷", "车", "侯", "宓", "蓬", "全", "郗", "班", "仰",
                  "秋", "仲", "伊", "宫", "宁", "仇", "栾", "暴", "甘", "钭", "厉", "戎", "祖", "武", "符", "刘", "景",
                  "詹", "束", "龙", "叶", "幸", "司", "韶", "郜", "黎", "蓟", "薄", "印", "宿", "白", "怀", "蒲", "邰",
                  "从", "鄂", "索", "咸", "籍", "赖", "卓", "蔺", "屠", "蒙", "池", "乔", "阴", "郁", "胥", "能", "苍",
                  "双", "闻", "莘", "党", "翟", "谭", "贡", "劳", "逄", "姬", "申", "扶", "堵", "冉", "宰", "郦", "雍",
                  "却", "璩", "桑", "桂", "濮", "牛", "寿", "通", "边", "扈", "燕", "冀", "浦", "尚", "农", "温", "别",
                  "庄", "晏", "柴", "瞿", "阎", "充", "慕", "连", "茹", "习", "宦", "艾", "鱼", "容", "向", "古", "易",
                  "慎", "戈", "廖", "庾", "终", "暨", "居", "衡", "步", "都", "耿", "满", "弘", "匡", "国", "文", "寇",
                  "广", "禄", "阙", "东", "欧", "殳", "沃", "利", "蔚", "越", "夔", "隆", "师", "巩", "厍", "聂", "晁",
                  "勾", "敖", "融", "冷", "訾", "辛", "阚", "那", "简", "饶", "空", "曾", "毋", "沙", "乜", "养", "鞠",
                  "须", "丰", "巢", "关", "蒯", "相", "查", "后", "荆", "红", "游", "竺", "权", "逯", "盖", "益", "桓",
                  "公", "万", "俟", "司", "马", "上", "官", "欧", "阳", "夏", "侯", "诸", "葛", "闻", "人", "东", "方",
                  "赫", "连", "皇甫", "尉", "迟", "公", "羊", "澹", "台", "公", "冶", "宗", "政", "濮", "阳", "淳于",
                  "单", "于", "鲜", "于", "钟", "离", "闾", "丘", "司", "徒", "司空", "亓", "官", "司", "寇", "仉",
                  "督", "子", "车", "颛", "孙", "端木", "巫", "马", "公", "西", "漆", "雕", "乐", "正", "壤", "驷",
                  "公", "良", "拓", "跋", "夹", "谷", "宰", "父", "谷", "梁", "晋", "楚", "闫", "法", "汝", "鄢", "涂",
                  "钦", "段", "干", "百里", "东", "郭", "南", "门", "呼延", "归", "海", "羊", "舌", "微", "生", "岳",
                  "帅", "缑", "亢", "况", "后", "有", "琴", "梁", "丘", "左", "丘", "东", "门", "西", "门", "商", "牟",
                  "佘", "佴", "伯", "赏", "南", "宫", "墨", "哈", "谯", "笪", "年", "爱", "阳", "佟", "第五", "言",
                  "福"]
    return random.choice(first_names) + random.choice(last_names)


def generate_random_label():
    labels = ["文学经典", "科技前沿", "艺术创作", "历史文化", "自然科学"]
    return random.choice(labels)


def generate_random_img():
    # 从csv中读取url
    with open('img.csv', 'r') as f:
        lines = f.readlines()
        url = random.choice(lines).strip()
    return url


def save_users_to_db(users):
    conn = get_connection()  # 获取数据库连接
    cursor = conn.cursor()

    for user in users:
        query = """
        INSERT INTO "user" (email, name, password, image, label)
        VALUES (%s, %s, %s, %s, %s);
        """
        cursor.execute(query, (user['email'], user['name'], user['password'], user['image'], user['label']))

    conn.commit()
    cursor.close()
    conn.close()


def main():
    users = []
    for _ in range(50):
        user = {
            'email': generate_random_email(),
            'name': generate_random_name(),
            'password': '123456',
            'image': generate_random_img(),
            'label': generate_random_label()
        }
        users.append(user)
    save_users_to_db(users)


if __name__ == "__main__":
    main()
